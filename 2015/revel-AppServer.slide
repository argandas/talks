# Slides for RubyGDL Meetup @ HackerGarage - Aug 20, 2015

Revel 
Web framework for the Go language

Hugo Arganda
hugo.arganda@gmail.com
https://about.me/argandas
@argandas

* Getting started

* Setup Go's Enviroment

- Download and install git and hg
- Install Go latest stable version
- Set your GOPATH enviroment var
  $ cd C:\
  $ mkdir gopath
  $ export GOPATH="C:\gopath"
- Update your system environment variable "PATH" to include your workspace
  $ export PATH=%PATH%;%GOPATH%\bin;

For detailed information please visit:

.link https://golang.org/doc/code.html

* Get Revel Up & Running

Import revel package

  $ go get github.com/revel/revel

Import revel's command line tool

  $ go get github.com/revel/cmd/revel

Test your installation

  $ revel help

* Creating a new Revel app

* Creating a new Revel application

Use the revel command line tool to create a new application in your GOPATH and run it:

  $ revel new myapp
  ~
  ~ revel! http://revel.github.io
  ~
  Your application is ready:
      /home/me/gostuff/src/myapp

  You can run it with:
      revel run myapp

* Run your revel app

  $ revel run myapp
  ~
  ~ revel! http://revel.github.io
  ~
  2012/09/27 17:01:54 run.go:41: Running myapp (myapp) in dev mode
  2012/09/27 17:01:54 harness.go:112: Listening on :9000

* Test your revel app

Open your browser to http://localhost:9000/ to see a notification that your app is ready.

.image revelApp/testApp.png

* How revel handles requests

* The Request Flow

In the previous page we created a new Revel application called myapp. On this page we look at how Revel handles the HTTP request to http://localhost:9000/ resulting in the welcome message.

* Routes

The first thing that Revel does is check the conf/routes file:

.code revelApp/routes.go /GET/

This tells Revel to invoke the Index method of the App controller when it receives a http GET request to /.

For more info about routers visit:

.link https://revel.github.io/quickstart/routing.html

* Actions

Letâ€™s follow this call to the code, in app/controllers/app.go:

package controllers

  import "github.com/revel/revel"

  type App struct {
      *revel.Controller
  }

  func (c App) Index() revel.Result {
      return c.Render()
  }

All controllers must be a struct that embeds a *revel.Controller in the first slot. Any method on a controller that is exported and returns a revel.Result may be used as an Action.

# The Revel controller provides many useful methods for generating Results. In this example, it calls Render(), which tells Revel to find and render a template as the response with http 200 OK.

* Templates

Templates are in the app/views directory. When an explicit template name is not specified, Revel looks for a template matching the action. In this case, Revel finds the app/views/App/Index.html file, and renders it as a Go template.

  {{set . "title" "Home"}}
  {{template "header.html" .}}

  <header class="hero-unit" style="background-color:#A9F16C">
      <div class="container">
      <div class="row">
          <div class="hero-text">
          <h1>It works!</h1>
          <p></p>
          </div>
      </div>
      </div>
  </header>

  {{template "footer.html" .}}

* Hot-reload
Revel has watchers that check for changes to files and recompiles as part of the development cycle.

To demonstrate this, change the welcome message. In Index.html, change

  <h1>It works!</h1>

to

  <h1>Hello Revel</h1>

# Refresh the browser, and you should see the change immediately! Revel noticed that your template changed and reloaded it.

.image revelApp/hello.jpg

* Revel watches

- All go code under app/
- All templates under app/views/
- The routes file: conf/routes

* Pass some data into the template

Change

  func (c App) Index() revel.Result {
      return c.Render()
  }

to

  func (c App) Index() revel.Result {
    greeting := "Hello RubyGDL"
    return c.Renderx(greeting)
  }

* Error handling
  
You may have noticed we had an error, if not, revel will notify you about it.

.image revelApp/error.png

* Update your template

Change

  <h1>Hello Revel</h1>

to

  <h1>{{.greeting}}</h1>

.image revelApp/helloRuby.jpg


* References

.link https://revel.github.io/
.link https://github.com/revel/
.link http://golang.org/pkg/html/template/

Revel Basics:

.link https://revel.github.io/quickstart/routing.html Routers
.link https://revel.github.io/quickstart/controllers.html Controllers
.link https://revel.github.io/quickstart/parameters.html Parameters

* About these slides

This presentation was made using Go's present tool:

.link https://godoc.org/golang.org/x/tools/present

This and all other slides will be available at:

.link https://github.com/argandas/talks